#!./venv/bin/python3
from ics import Calendar
import requests
from datetime import datetime
import http.server
import socketserver
from urllib.parse import urlparse
from urllib.parse import parse_qs
import configparser

config = configparser.ConfigParser()
config.read('calprint.conf')


port = int(config["Common"]["port"])


class MyHttpRequestHandler(http.server.SimpleHTTPRequestHandler):
    def do_GET(self):
        urlpath = self.path.split("?", 1)[0]
        if (urlpath == "/style.css" or urlpath == "/print.css" or urlpath == "/logo.png"  or urlpath == "/favicon.ico"):
            return http.server.SimpleHTTPRequestHandler.do_GET(self)
        elif (urlpath == "/"):
            self.send_response(200)
            self.send_header("Content-type", "text/html")
            self.end_headers()

            # Extract query param
            now = datetime.now()
            year = str(now.year) # current year as fallback value
            calendar = list(config['CalendarURLs'].keys())[0] #take first cal as fallback
            query_components = parse_qs(urlparse(self.path).query)
            if 'year' in query_components:
                year = query_components["year"][0]
            if 'cal' in query_components:
                calendar = query_components["cal"][0]

            # Some custom HTML code, possibly generated by another function
            html = assembleHtmlResponse(year,calendar)

            # Writing the HTML contents with UTF-8
            self.wfile.write(bytes(html, "utf8"))
        else:
            self.send_response(200)
            self.send_header("Content-type", "text/html")
            self.end_headers()
            html = "<h1>Sorry...</h1><h2>Error processing request...</h2>Your happy hno-calendar-serving bot :)"
            self.wfile.write(bytes(html, "utf8"))

        return


def getevent(c, year, month, day):

    entries = list(c.timeline)

    results = ""
    for x in range(len(entries)):
        if (int(entries[x].begin.format('YYYY')) == year) & (int(entries[x].begin.format('MM')) == month) & (int(entries[x].begin.format('DD')) == day)   :
            #print( entries[x].begin.format('YYYY-MM-DD') )
            #print((entries[x]).name)
            results = results + " / " +(entries[x]).name
    return(results[3:])


def assembleHtmlResponse(year,calendar):

    url = config["CalendarURLs"][calendar]

    c = Calendar(requests.get(url).text)

    html = "<!doctype html><html>"
    html = html + "<head><meta charset=\"utf-8\"> <meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\">"
    html = html + "<link rel=\"stylesheet\" href=\"./style.css\">\n"
    html = html + "<link rel=\"stylesheet\" media=\"print\" href=\"./print.css\">\n"
    html = html + "</head>\n"
    html = html + "<body>\n"
    html = html + "<div class=\"year\">" + str(year) + "</div>\n"
    html = html + "<div class=\"calname\">" + calendar + "</div>\n"
    html = html + "<div class=\"logo\"></div>\n"
    html = html + "<table class=\"calendar\">\n"
    html = html + "<tr>\n"

    for x in range (1,13):
        monthname = config["Monthnames"][str(x)]
        html = html + "<th> <div class=\"day\">" + monthname + "</div> </th>\n"
    html = html + "</tr>\n"
    
    for day in range (1,32):
        html = html + "<tr>\n"
        for month in range(1,13):
            isweekend = 0
            try:
                if (datetime(int(year), month, day).weekday() >= 5):
                    isweekend = 1
            except:
                pass  # if that date does not exist
            if isweekend:
                html = html + "<td class=\"weekend\">"
            else:
                html = html + "<td class=\"weekday\">"
                

            html = html + " <div class=\"daycontainer\">"
            html = html + " <div class=\"daynr\">"

            try: #check if date does exist, if not, don't print out day number
                datetime(int(year), (month), (day))
                html = html + str(day) 
            except ValueError:
                pass #this date does not exist


            html = html + "</div>"
            html = html + "<div class=\"day\">"
            html = html + getevent(c, int(year), month, day)
            html = html + "</div> </div> </td>\n"
            
        html = html + "</tr>\n"


    html = html + "</table>\n"
    html = html + "<div class=\"footer\">u.sommer@hno-mangfall-inn.de</div>\n"
    html = html + "</body>\n"
    return (html)


handler_object = MyHttpRequestHandler
my_server = socketserver.TCPServer(("", port), handler_object)

# Start the webserver
print("Starting the webserver on port: " + str(port))
my_server.serve_forever()

